pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
        if (!localPropertiesFile.exists()) {
            throw new FileNotFoundException("local.properties not found. Please ensure the file exists and contains flutter.sdk property")
        }
        
        localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }
        
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        if (flutterSdkPath == null) {
            throw new GradleException("flutter.sdk not set in local.properties. Please ensure the property is set correctly")
        }
        
        return flutterSdkPath
    }()

    includeBuild("${flutterSdkPath}/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

include ':app'

// Flutter-specific configurations
def flutterProjectRoot = rootProject.projectDir.parentFile
def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot, '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.toPath().resolve(path).toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}
